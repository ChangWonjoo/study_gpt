### XZ Backdoor Overview

In February 2024, a malicious backdoor was introduced to the Linux build of the xz utility within the liblzma library in versions 5.6.0 and 5.6.1 by an account using the name "Jia Tan". The backdoor gives an attacker who possesses a specific Ed448 private key remote code execution capabilities on the affected Linux system. The issue has been given the Common Vulnerabilities and Exposures number CVE-2024-3094 and has been assigned a CVSS score of 10.0, the highest possible score. While xz is commonly present in most Linux distributions, at the time of discovery, the backdoored version had not yet been widely deployed to production systems but was present in development versions of major distributions. The backdoor was discovered by the software developer Andres Freund, who announced his findings on March 29, 2024.

### Details of the Backdoor

The backdoor was introduced through a series of updates that modified the behavior of the xz utility, specifically targeting the SSH daemon (sshd). The malicious code allowed unauthorized access to systems by manipulating SSH authentication processes. The backdoor was designed to inject code during a critical phase of the SSH login process, potentially allowing attackers to execute arbitrary commands on compromised systems.

The backdoor was discovered during troubleshooting by Andres Freund, who noticed performance issues related to SSH logins. Upon investigation, he found that the issues were linked to the updates made to xz Utils, leading to the revelation of the backdoor.

### Technical Mechanism

The backdoor works by allowing someone with the right private key to hijack the sshd process. It uses a five-stage loader to hide its presence and can deliver new payloads without requiring significant changes to the original code. The malicious changes were submitted by JiaT75, who had been involved in the xz project for years, raising concerns about the integrity of other contributions made by this developer.

### Implications and Response

The discovery of the backdoor raised alarms within the open-source community, highlighting the risks associated with supply chain attacks. Fortunately, the backdoor was caught before it could be widely deployed in production environments, potentially averting a significant security crisis. Major Linux distributions, including Debian and Red Hat, were alerted to the issue, and steps were taken to revert to safe versions of xz Utils.

### Conclusion

The xz backdoor serves as a stark reminder of the vulnerabilities inherent in open-source software development, particularly regarding the trust placed in contributors. It underscores the need for rigorous code review processes and vigilance against potential malicious activities within the software supply chain.

### Sources
- [WIRED: The XZ Backdoor: Everything You Need to Know](https://www.wired.com/story/xz-backdoor-everything-you-need-to-know/)
- [Ars Technica: Backdoor found in widely used Linux utility targets encrypted SSH connections](https://arstechnica.com/security/2024/03/backdoor-found-in-widely-used-linux-utility-breaks-encrypted-ssh-connections/)
- [Wikipedia: XZ Utils backdoor](https://en.wikipedia.org/wiki/XZ_Utils_backdoor)